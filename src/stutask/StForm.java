/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package stutask;

import java.awt.Color;
import javax.swing.Action;
import java.sql.*;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmed
 */
public class StForm extends javax.swing.JFrame {

    /**
     * Creates new form StForm
     */
    public StForm() {
        initComponents();
    }
    //Database connection variables
        Connection con =null;
        Statement st =null;
        ResultSet rs=null;
        
        //Database url&driver
        
        String url ="jdbc:derby://localhost:1527/project";
        String driver ="org.apache.derby.jdbc.ClientDriver";
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        add = new javax.swing.JButton();
        Name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Email = new javax.swing.JTextField();
        Phone = new javax.swing.JTextField();
        Age = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        StuTable = new javax.swing.JTable();
        id = new javax.swing.JLabel();
        error = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setText("Name");

        add.setText("ADD");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        jLabel2.setText("E-mail");

        jLabel3.setText("Age");

        jLabel4.setText("Phone");

        Email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                EmailKeyReleased(evt);
            }
        });

        Phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                PhoneKeyPressed(evt);
            }
        });

        Age.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                AgeKeyPressed(evt);
            }
        });

        delete.setText("DELETE");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        StuTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "StuID", "Name", "E-mail", "Age", "Phone"
            }
        ));
        StuTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                StuTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(StuTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(45, 45, 45)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(43, 43, 43)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(13, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(Email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(Age, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(error, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(add)
                            .addComponent(delete)
                            .addComponent(update))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(4, 4, 4))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model = (DefaultTableModel)StuTable.getModel();
        
        //textboxes in variables
        
        String name   =Name.getText();
        String email  =Email.getText();
        String age    =Age.getText();
        String phone  =Phone.getText();
        
        //Email status
        boolean status ;
        String Email_Pattern= "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        //Email Pattern
        Pattern pattern=Pattern.compile(Email_Pattern);
        Matcher matcher =pattern .matcher(email);
        
        status = matcher.matches() ?true : false;
        
        //Check if there is empty textbox
        if (name.isEmpty()|| email.isEmpty()||age.isEmpty()|| phone.isEmpty()) {
            error.setText("Complete The Information");
            
        }
        else if(status==false)
        {
            error.setText("Invalid E-mail");
        }
        else{
            error.setText("");
            //All code
            try{
                
                //Database connection
                Class.forName(driver).newInstance();
                con=DriverManager.getConnection(url);
                System.out.println("Connected...");
                //Sql code to insert row in the Daabase
                String sql="INSERT INTO \"table\" (\"Name\", \"Email\", \"Age\", \"Phone\")"+"VALUES('"+name+"','"+email+"','"+age+"','"+phone+"')";
                
                //connection close
                st=con.createStatement();
                st.executeUpdate(sql);
                rs=st.getGeneratedKeys();
                st.close();
                //sort the rows
                st=con.createStatement();
                rs=st.executeQuery("SELECT * FROM \"table\" ORDER BY \"UsreID\" DESC FETCH FIRST ROW ONLY");
                
                Object [] row =new Object[5];
            while(rs.next()) {

                row[0] = rs.getString(1);
                row[1] = rs.getString(2);
                row[2] = rs.getString(3);
                row[3] = rs.getString(4);
                row[4] = rs.getString(5);
                model.addRow(row);
                }
            //connection close 
                   st.close();
                   con.close();
                   System.out.println("Disconnected...");
                   //empty textboxes&lables
                   Name.setText("");
                   Email.setText("");
                   Age.setText("");
                   Phone.setText("");
                   error.setText("");
                   id.setText("");
                
            } catch(Exception e){
                e.printStackTrace();
                
            }
            
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
        DefaultTableModel model=(DefaultTableModel)StuTable.getModel();
        
        
        try {
            Class.forName(driver).newInstance();
            con=DriverManager.getConnection(url);
            System.out.println("Connected...");
            
            st=con.createStatement();
            rs=st.executeQuery("SELECT * FROM \"table\" ORDER BY \"UsreID\" ASC");
            
            Object [] row =new Object[5];
             while(rs.next()){
            row[0]=rs.getString(1);
            row[1]=rs.getString(2);
            row[2]=rs.getString(3);
            row[3]=rs.getString(4);
            row[4]=rs.getString(5);
            model.addRow(row);
        }
           st.close();
           con.close();
           System.out.println("Disconnected...");

        } catch (Exception e) {
            System.out.println("Error");
        }    
    }//GEN-LAST:event_formWindowOpened

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        // TODO add your handling code here:
        
        DefaultTableModel model=(DefaultTableModel)StuTable.getModel();
        //textboxes in variables
        String name = Name.getText();
        String email = Email.getText();
        String age = Age.getText();
        String phone = Phone.getText();
        
        //Email pattern
        
        boolean status;
        String Email_Pattern = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

        Pattern pattern = Pattern.compile(Email_Pattern);
        Matcher matcher = pattern.matcher(email);
        status = matcher.matches();
        //Check if there is Empty textboxes
        if (name.isEmpty() || email.isEmpty() || age.isEmpty() || phone.isEmpty()) {
            error.setText("One or more inputs are missing !!");
        }
        else if (status == false) {
            error.setText("Invalid Email");
        } else {
            error.setText("");
            //All code
            try {
            Class.forName(driver).newInstance();
            con = DriverManager.getConnection(url);
            System.out.println("Connected...");
            
            //sql code to update table
            String sql ="UPDATE \"table\" set \"Name\" = '"+name +"',\"Email\"='"+email+"',\"Age\"='"+age+"',\"Phone\"= '"+phone+"'Where \"UsreID\" = "+id.getText();   
            
            st = con.createStatement();
            st.executeUpdate(sql);
            
            //connection close
            st.close();
            con.close();
            System.out.println("Disconnected !!");
            
            //fill table
            StuTable.getModel().setValueAt(Email.getText(), StuTable.getSelectedRow(), 2);
            StuTable.getModel().setValueAt(Age.getText(),   StuTable.getSelectedRow(), 3);
            StuTable.getModel().setValueAt(Name.getText(),  StuTable.getSelectedRow(), 1);
            StuTable.getModel().setValueAt(Phone.getText(), StuTable.getSelectedRow(), 4);
            
            //Empty Text boxes
            
            Name.setText("");
            Email.setText("");
            Age.setText("");
            Phone.setText("");
            id.setText("");
            error.setText("");
            
        }
            catch(Exception e)
            {
                e.printStackTrace();
            }      
        }    
    }//GEN-LAST:event_updateActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
        
        
            String x = StuTable.getModel().getValueAt(StuTable.getSelectedRow(), 0).toString();
            try {
                //connection to database
            Class.forName(driver).newInstance();
            con = DriverManager.getConnection(url);
            System.out.println("Connected...");
            
            //delete sql code
            String sql="DELETE FROM \"table\" WHERE \"UsreID\" = "+x;
            st = con.createStatement();
            st.executeUpdate(sql);
            
            st.close();
            con.close();
            System.out.println("Disconnected...");
            //delete from row...
            ((DefaultTableModel)StuTable.getModel()).removeRow(StuTable.getSelectedRow());
           //Empty text boxes
            Name.setText("");
          
            Email.setText("");
            Age.setText("");
            Phone.setText("");
            error.setText("");
            id.setText("");
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        
    }//GEN-LAST:event_deleteActionPerformed

    private void StuTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_StuTableMouseClicked
        // TODO add your handling code here:
        
        //When click in row in the table its data open in the text bxes
        
        id.setText(StuTable.getModel().getValueAt(StuTable.getSelectedRow(), 0).toString());
        Name.setText(StuTable.getModel().getValueAt(StuTable.getSelectedRow(), 1).toString());
        Email.setText(StuTable.getModel().getValueAt(StuTable.getSelectedRow(), 2).toString());
        Age.setText(StuTable.getModel().getValueAt(StuTable.getSelectedRow(), 3).toString());
        Phone.setText(StuTable.getModel().getValueAt(StuTable.getSelectedRow(), 4).toString());
    }//GEN-LAST:event_StuTableMouseClicked

    private void AgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_AgeKeyPressed
        // TODO add your handling code here:
        //Age textbox
        //you can not type chars ,only numbers
        int key = evt.getKeyCode();
        if((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key == evt.VK_BACK_SPACE)) {
            
            Age.setEditable(true);
            
        } else {
            
            Age.setEditable(false);
            
        }
    }//GEN-LAST:event_AgeKeyPressed

    private void EmailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_EmailKeyReleased
        // TODO add your handling code here:
            //Check the Email pattern
        
        boolean status;
        String Email_Pattern = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";

        
        Pattern pattern = Pattern.compile(Email_Pattern);
        Matcher matcher = pattern.matcher(Email.getText());
        status = matcher.matches();
        
        
        if (status) {
            error.setText("");
        } else {
            error.setText("Invalid E-mail");
        }
    }//GEN-LAST:event_EmailKeyReleased

    private void PhoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PhoneKeyPressed
        // TODO add your handling code here:
        //Phone Textbox
        //you can not type chars ,only numbers
        
        int key = evt.getKeyCode();
        if((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || (key == evt.VK_BACK_SPACE)) {
            
            Phone.setEditable(true);
            
        } else {
            
            Phone.setEditable(false);
            
        }
        
    }//GEN-LAST:event_PhoneKeyPressed

    
    
    
    
    
    
    
                       
    
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Age;
    private javax.swing.JTextField Email;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Phone;
    private javax.swing.JTable StuTable;
    private javax.swing.JButton add;
    private javax.swing.JButton delete;
    private javax.swing.JLabel error;
    private javax.swing.JLabel id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton update;
    // End of variables declaration//GEN-END:variables
}
